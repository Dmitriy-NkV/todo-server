name: Todo Pipeline

on:
  push:
    branches: [ main, master, dev ]
  pull_request:
    branches: [ main, master, dev ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_DB: todoapp
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: admin
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      run: docker build -t todo-app .

    - name: Wait for PostgreSQL
      run: |
        echo "Waiting for PostgreSQL to be ready..."
        for i in {1..30}; do
          if docker run --rm --network host postgres:17 pg_isready -h localhost -p 5432 -U postgres; then
            echo "PostgreSQL is ready!"
            break
          fi
          echo "PostgreSQL not ready yet. Attempt $i/30"
          sleep 2
        done

    - name: Check build
      run: |
        # Проверяем, что приложение собирается без ошибок
        docker run --rm todo-app ls -la ./build/server

  docker-compose-test:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Start services with docker-compose
      run: |
        docker-compose up -d
        sleep 10

    - name: Check if services are running
      run: |
        docker-compose ps
        docker-compose logs app

    - name: Test application health
      run: |
        curl --retry 5 --retry-delay 5 --retry-max-time 30 http://localhost:9000/health

    - name: Clean up
      if: always()
      run: docker-compose down
