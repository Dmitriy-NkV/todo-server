version: '3.8'
services:
  postgres:
    image: postgres:17
    environment:
      POSTGRES_DB: todoapp
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    profiles: ["app"]

  postgres-test:
    image: postgres:17
    environment:
      POSTGRES_DB: dbtest
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    profiles: ["tests"]

  app:
    build:
      context: .
      dockerfile: dockerfile
    ports:
      - "9000:9000"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=todoapp
      - DB_USER=postgres
      - DB_PASSWORD=admin
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=9000
      - THREADS_NUM=1
    depends_on:
      postgres:
        condition: service_healthy
    stdin_open: true
    tty: true
    profiles: ["app"]

  tests:
    build:
      context: .
      dockerfile: dockerfile.test
    environment:
      - DB_HOST=postgres-test
      - DB_PORT=5432
      - DB_NAME=dbtest
      - DB_USER=postgres
      - DB_PASSWORD=admin
    depends_on:
      postgres-test:
        condition: service_healthy
    profiles: ["tests"]

volumes:
  postgres_data:
